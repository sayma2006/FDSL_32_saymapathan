//stack parenthesis
#include<stdio.h>
#include<string.h>   
#define MAX 6
char stack [MAX];
int top=-1;
void push(int x)
 {
  if(top==MAX-1)
   {
    printf("Overflow\n");
   }
  else
   {
    top++;
    stack[top]=x;
   }
 }
char pop()
{
 if(top==-1)
  {
   printf("Underflow\n");
   return '\n';
  }
 else
  {
   char x=stack[top];
   top--;
   return x;
  }
}
int ispair(char c1,char c2)
 {
  if(c1=='('&& c2==')')
   {
    return 1;
   }
   else if(c1=='{'&& c2=='}')
   {
    return 1;
    }
     else if(c1=='['&& c2==']')
   {
    return 1;
    }
    else
   {
    return 0;
    }
 }
 int isbalanced(char *express)
 {
  int i;
  for(i=0;i<strlen(rxpress);i++)
   {
    if(express[i]=='('|| express[i]=='['|| express[i]=='{')
     {
      push(express[i]);
     }
     else if(express[i]==')'|| express[i]==']'|| express[i]=='}')
     {
      if(top==-1)
       { 
        return 0;
       }
      else if(!ispair(pop(),express[i]))
       {
       return 0;
       }
     }
  }
if(top==-1)
{
 return 1;
}
else
{
 return 0;
}
}
int main()
{
char express[MAX];
printf("enter expression");
scanf("%s",express);
if(isbalanced(express))
 {
  printf("Balanced\n");
 }
else
{
  printf("not balanced");
}
return 0;
}  
  
  
    
