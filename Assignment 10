#include<stdio.h>
#include<stdlib.h>

struct node
{
  int data;
  struct node *next;
};

struct node *head=NULL,*temp,*prevnode,*newnode;

void insertAtFirst()
{
   newnode=malloc(sizeof(struct node));
   printf("Enter the data for newnode:");
   scanf("%d",&newnode->data);
   
   if(head==NULL)
   {
      head=newnode;
      newnode->next=NULL;
   }
   else
   {
     newnode->next=head;
     head=newnode;
   }
}

void insertAtLast()
{
   newnode=malloc(sizeof(struct node));
   printf("Enter the data for newnode:");
   scanf("%d",&newnode->data);
   
   if(head==NULL)
   {
      head=newnode;
      newnode->next=NULL;
   }
   else
   {
      temp=head;
      while(temp->next!=NULL)
      {
         temp=temp->next;
      }
      
      temp->next=newnode;
      newnode->next=NULL;
   }
   
}

void deleteAtFirst()
{
   if(head==NULL)
   {
     printf("SLL is empty");
   }
   else
   {
     temp=head;
     head=head->next;
     temp->next=NULL;
     free(temp);
   }
}

void deleteAtLast()
{
   
   if(head==NULL)
   {
     printf("SLL is empty");
   }
   else
   {
     temp=head;
     while(temp->next!=NULL)
     {
        prevnode=temp;
        temp=temp->next;
     }
        prevnode->next=NULL;
        free(temp);
     
   }
}

void display()
{
   if(head==NULL)
   {
     printf("SLL is empty");
   }
   
   temp=head;
   printf("Linked list elements:");
   while(temp!=NULL)
   {
     printf("%d ->",temp->data);
     temp=temp->next;
   }
   printf("NULL\n");
}

void main()
{ 
   int  choice,value;
   do
   {

      printf("\nSLL Operations:");
      printf("\n 1.Insert at first \n 2.Insert at last \n 3.Delete at first\n 4.Delete at last\n 5.Display\n 6.Exit"); 	
      printf("\n Enter your choice:");
      scanf("%d",&choice);

switch(choice)
{
  case 1:insertAtFirst(value);
          break;
  case 2:insertAtLast(value);
          break;
  case 3:deleteAtFirst();
          break;
  case 4:deleteAtLast();
          break;
  case 5:display();
          break;
  case 6:printf("Exiting Program\n");
         exit(0);
 default:printf("Invalid choice");
}
}while(choice!=0);


}
